6.034 Final Examination 
December 15,2004 
- - - -" - 
: Name 
, 
- -- - 
1 
! EMail , 
- - 
There are many pages in this examination because we have reproduced many diagrams for your 
problem-solving convenience. We recommend you work the problems in order to maximize points 
per unit time. 
I Problem number ; Maximum Score Grader 
phw rcb lo sn vm 110 lpb js 
15 . phw rcb lo sn vm 110 lpb js 
22 phw rcb lo sn vm 110 1pb js 
phw rcb lo sn vm Ilo lpb js 
5 14 phw rcb lo sn vm 110 lpb js 
i 6 15 phw rcb lo sn vm 110 Ipb js 
i 
, Total 100 
Problem 1: Search (17 Points) 

Consider the following graph. Note that each link is bidirectional and labeled with its cost, and each node 
contains a number in parenthesis that corresponds to a heuristic estimate of the cost remaining to reach the 
goal node. For the following questions you are to search from node A to node Z (start at node A and find 
a path to node Z), using the prescribed search algorithm. Break any ties that arise by alphabetical order 
(extend the node that comes first alphabetically first). For this problem, the words extended and expanded 
are interchangeable. Make sure to search from A to Z. 
Part A (112 point) 
What node should you start your search from? Yes, it's that easy. 
Part B (112 point) 
What node should you search to? Yes, it's that easy 
&---
Part C (3 points) 
You are to perform breadth-first-search. Do not use an enqueued list or an extended list. Do not extend 
any partial path to a node that it already contains. Use the convention that a path to the goal is only 
returned when the goal node is extended, not as soon as it appears in the queue. 
Write down all the nodes extended, in the order in which they are extended. 
Give the full path that is returned. 
For your convenience, the graph is redrawn: 
Part D (3 points) 
Perform depth-first-search (with backup). Do not use an enqueued list or an extended list. Do not extend 
any partial path to a node that it already contains. Use the convention that a path to the goal is only 
returned when the goal node is extended, not as soon as it appears in the queue. 
Write down all the nodes extended, in the order in which they are extended. 
Give the full path that is returned. 
-
For your convenience, the graph is redrawn: 
Part E (3 points) 
Perfonn A* search using the estimates shown. As always with A*, you are to use an extended list. Do not 
extend any partial path to a node that it already contains. 
Write down all the nodes extended, in the order in which they are extended. 
Give the full path that is returned. 
For your convenience, the graph is redrawn: 
Part F (2 points) 
Suppose you implemented depth-first-search, with backup, without an enqueued list or extended list but 
forget to disallow the extension of partial paths to nodes which they already contain. Would your 
depth-first-search implementation find a path from A to Z? 
Yes G; 
Is it true that in general the specified search will always find a path from one node to another (in any 
graph), if such a path exists? 
Yes 6) 

Part G (2 points) 
Suppose you implemented breadth-first-search, but forget to disallow the expansion of partial paths to 
nodes which they already contain. Would your breadth-first-search implementation find a path from A 
to Z? 
Is it true that in general the specified search will always find a path from one node to another (in any 
graph), if such a path exists? 
Part H (3 points) 
Did your A* search produce the optimal path? 
Yes .-G;-) 

Explain why or why not. Hint: check your answer against the diagram. 
Problem 2: Constraint Satisfaction (15 points) 

Tired of being overshadowed by New York City, upstate New York has claimed independence from the 
city of New York, and changed its name to New Yorkshire. As part of this campaign of reaffirmation of 
identity, New Yorkshire has asked to become part of New England. The governors of New England have 
reacted by forming a council to determine the admission of New Yorkshire to their group. Consensus has 
been reached in the council on the basis of map coloring: 
(1) If maps of the Extended New England can still be colored Red Green and Blue, New YorkShire 
will be admitted. 
(2) In addition to that, Massachusetts legislature (seeking an opportunity to forever define the 
political color of its state) has required that any new coloring should have Massachusetts shown in Blue 
(3) Not willing to concede on its identity Vermont has further added the restriction that should New 
England be extended, any future map have Vermont shown in Green to honor their motto: "The Green 
Mountain State". 
Your task, as consultant to New England's 
council in A1 matters, is to determine if New 
England can be extended to include the 
brand new state of New Yorkshire. , 
In this problem you will be asked to color 
the Extended New England. The graph of 
extended new England is displayed in the 
figure to the right. 
The edges in the graph are to be seen as not-
same constraints. 
1 Domains (1 point) 
Write Down the initial domain of all the variables according to the specifications of the council: 

CT MA ME NH RI VT NY 

{R,G, B1 { a 1 {RGgI {W> {w&> {G- > @W'> 

In the following three questions you will be asked to solve the constraint satisfaction problem using: 

1) Backtracking with Forward Checking +propagate through domains of one 

2) Backtracking with Forward Checking 

3) Backtracking 

Note that we have ordered the searches we ask you to do so that the one that we think generates the 
largest tree is last. For your convenience the graph is presented in every page. . 
2. 	Backtracking + forward checking + 
propagate through domains of one 
(5 points) 
In this problem you must examine the values for each domain in the following order: B +R +G. 
Remember the order is B 3R 3G. 
3. Backtracking + Forward Checking 
(4 points) 
In this problem you must examine the values for each domain in the following order: G 3 B 3R As 
usual, you are to check for consistency after each variable assignment. , 
Remember the order is now G B R. 
4. Backtracking 

(4 points) 

In this problem you must examine the values for each domain in the following order: R + G 3 B. As 
usual, you are to check for consistency after each variable assignment. 
Remember the order is now R G 3B. 
Problem 3: Neural Networks (22 points) 
In this problem you are asked to build a neural network step by step, and then reason about the properties 
of this network. The problem has many questions but the amount of work required is much less than it may 
seem at first glance. We first guide you in constructing a particular type of neural network. Then, we ask 
you to reason about the network you just built. 
Building one Neural Network Unit 
(5 parts, 2 points) 
Consider the network unit shown on 
the right 
At first, we are interested in building a network using 
a perceptron type step function as the threshold unit 
rather than a sigmoid functions. Formally, the step 
function threshold unit is defined as follows: 
0 ifinput <O 
S(inpput)= 
1 rfinput 2 0 
......a
The step function is shown in the figure to the 
I 
o 
right. Note the convention adopted for 
the output when input=O, which will matter 
later on. With this definition, the output of the 
. 
ne 
unit in the figure can be written as 0 
Where S1is a step threshold function. 
Consider the following data, in which squares stand for class y=O (0,y=O), and circles stand for class 
y=l, (O,y=l)): 
1. Draw the decision boundary 
2. Write the equation for the decision boundary 
Implementing the decision boundary for the unit above given this sample data implies finding a 
relationship between the alphas a. 
3. What is the relationship between the alphas a? 
1 
4. 	 What should the offset (b) be. 
5. 	 Is there any additional constraint on a,needed to ensure that the network produces the right answer 
on each side of the boundary? (Yes/No, if yes, write it down) 
jd-A, -^ - ,X,z h 
Building another Unit f 
(5 parts, 1 point) 
Consider now a second Neural Network unit, like 
the one on the right. You should use the same step 
threshold function as in part 1. 
Consider the following data: 
6. 	Draw the decision boundary 
7. 	Write the equation for the decision boundary 
8. 	What is the relationship between the betas P.? 
9. 	What should the offset (c) be? 
I 	 I 
10.1s there any additional constraint on PI. (Yes/No, if yes, write it down) 
I 	 I 
Building the final unit (1 part, 1 point) 
We want to construct a third unit that takes as input the 
outputs of S1 and S2.: 
11,Complete the expression for output of the third 
threshold unit in terms oE 
XI and x2, 
the functions S1and S2, 
and your knowledge about the as and the ps. 
For the rest of the problem we will consider the following sample Data. 
This data may look familiar, but as a wise Spanish proverb says: "At night, all cats look brown," 
which implies that you should wait until light shines on the problem before jumping to conclusions. 
So are the weights constrained? (4 parts, 8 points) 
Consider the three data points 
12.Looking at the formula you obtained in part 11, use the table above to determine three constraints 
on the weights for the final unit (wI3, ~23, w3) 
Consider now the following variables and domains: 
Variable I Domain 
w13 {-I721 
w23 {-27-172} 
w3 { 1,273) 
13.Draw the arcs that best suit the constraints in 13, in the following graph 
14.Run constraintpropagation (a.k.a. arc consistency) on the above graph, and fill the table below as 
you proceed (if some arc does not exist in your graph, just cross it out) : 
15.What are the possible solution(s) you get? 
A sigmoid neural network (5 parts, 10 points) 
Now asume that we want to use sigmoid units instead of step units. Recall that a sigmoid unit would look 
like: 
16. Show the new output of s3 in terms of xl and xz. Note that sl and s2 must not appear in your 
solution. Look back at question 11 and replace the step functions that appeared there by the 
sigmoid expression. Set the as and the ps to +1 or -1 in accordance with your answers to part 5 
and part 10. Simplify the result as much as you can. 
17.Recall that the output of a sigmoid function is continuous. However, for classification, we use the 
following relation: 
- - 
Draw approximately the decision boundary of the sigmoid network if the weights in the final unit were: 
wI3=2, wZ3=2, w3=2. and the as and ps are +I or -1, as determined in part 16. 
\I 
18. Do the same assuming the weights were wI3=2, wZ3=2, w3=l using the same as and ps as before. 
19.Comment on the most salient difference, if any, between the decision boundaries produced by a 
sigmoid unit and a step threshold unit. 
pnL(p L YV+~L~(6>:eIf.IC~ 
" 
20.What would you change, if anything, in the sigmoid function to arbitrar;ly approximate the 
decision boundary when using the step function? 
AU- LQV,k h Jk Lip.' cj/& J~WQIJ~+~L&~l-
si(x) 5 	-, 
1 
I vt 
'kc"" I 
1 
J 
Problem 4: Boosting (17 points) 

Consider the following dataset, in which points are numbered for easier identification later on and where 
plus and minuses show the class information. For your convenience, the diagram is reproduced on a 
tear-off sheet at the end of this examination. 
For this problem, we will consider the following set of decision stumps to be the hypothesis space of the 
weak learner. (A decision stump is a one-test decision tree.) 
I Stump / Variable / ~hGsh014 
Remember that the signs at each side of these thresholds are to be determined based on the training data. 
For example, looking at the x2=4, with initial uniform weights, both sides of the boundary are going to be 
positive, and thus there will be 4 mistakes ( the 4 minuses). 
Tie break-up: 
a) If when determining the class at each side of the threshold you get a tie, you shall ignore the 
weights and decide based on regular count of each class. 
b) If when choosing between stumps, you get a tie, you shall choose by the number associated with 
each stump; lower number takes precedence. 
Part A: 2D data, ... crunch the booster(2 parts, 13 points) 
1. (10 points) Boosting is all about iterating. Fill in the two tables below with the result of 
carrying on three iterations of the boosting algorithm. At each iteration, choose the classifier with 
the lowest E Remember that 
D(i) stands for the weight of sample point i. 
E is the error of the classifier chosen at that iteration 
a is the weight of the classifier in the final majority vote 
Note, filling in the first two iterations is worth 80% of the points of this question, filling the third column is 
worth the remaining 20%. 
Note, even if it is possible to start boosting with an arbitrary set of weights on the data, for this problem 
you are expected to start with uniform weighting of the data. 
We have filled in one of the answers for you so as to demonstrate the form we require for your answers. 
2. 	 (3 points) Classify the training dataset according to the final classifier depending on 
the iteration you stopped at, or feel more confident with. 
I stopped at t = 
Sample Point 1 2 3 4 5 6 7 8 9 10 
Class (+I-) 19-1 - 1- 1- I+ I+ It 1-t I+ It I 
Part B: 3D data, ...fooling the booster (2 parts, 4 points) 
We have just received word that the data above was missing one dimension. Here are the extra feature 
values for each data point: 
Sample Point 	
x3 
d
1 .9 
-
2 1 
3 	 2 + 
4 	 .5 
5 	 1.5 .t 
.--.
6 	 0.8 
7 	 2.5 -$-
8 	 1.75 
-j-
9 	 2.1 * 
10 1.9 .t. 
Assume the stumps for this dimension have threshold values at the midpoints between adjacent sample 
values. Assume we restart boosting with uniform weights on the samples 
3. 	 (2 points) What can you reuse fi-om part I? 
o~heerrors of the stumps (hl-h3), and the initial weights 
b. 	The a values of the winning stumps. 
c. 	(a) and the weights for each iteration. 
d. Everything. 
e. 	All of the above 
f. 	 None of the above 
4. (2 points) Boosting actually does not help when given this problem. Explain why. 
Problem 5: Concept Learning (14 points) 

You wish to teach Marvin the Robot the concept CUP using images A through G below. Marvin, as it 
happens, uses Winston's concept learning system, along with a vision system that delivers for each image: 
1. a shape description of the base of the object: 
Circular 
2. whether the object has a handle or not (only A, F, and G have handles) 
3. whether the object is closed or open (only C and F are closed) 
4. the ratio of width to height -a positive real number 
Image A B C D E F G 
Ratio 0.5 0.5 0.5 2 0.4 0.3 0.35 
Here are the 6 images you present to Marvin: (A, B, E are "positive" examples, while the rest are 
"negative" examples). Images A, B, C, D, F are circular, E is pointed, G is 4-sided. 
A - HIT B - HIT C - MISS 
D - HIT E - HIT F -MISS G - MISS 
PART A: (6 points) 
For each of the images presented to Marvin, write an English description of the model Marvin builds, and 
determine which heuristics, if any, Marvin uses to update his model: 
Image Heuristics Used Marvin's Model of CUP 
A None has handle, is open, circular bottom, ratioy.5 
Dctp -
1scpwl LLtLuiC~ m&L= 05
(ldk 
bdlh~~, 
f?~ai~,, 
NUSt Ir Or&, GrruCr &Horn, RcL- =5
c 
--l;k 
Cloi Inkrval 
MII,j~0~,C'\~CU\~~~~~O~,IZG~~&,S,~ 
E e rnb-hre 4~ 
CI,~4U ~ A 
MUJ~ Ld-pch,. ~,~&a,a;ho r [0.~,2]I 
F 
hr.nc 
QLUL L4 tIn,*C il 
G 
AGM a 
Here are the list of heuristics Marvin could use: (see pg. 356 in Chapter 16, reproduced on tear-of sheet at 
the end of the examination) 
require-link, forbid-link, climb-tree, enlarge-set, drop-link, close-interval 
PART B: (4 points) 
f:B*~F

Which images cause Marvin the Robot to generalize his model? 
Which images cause Marvin the Robot to specialize his model? 
c-
PART C (4 points) 
Suppose you trained Marvin the Robot on the concept POT, and Marvin arrived at the following model: 
Marvin's Model: 
POT: must be open, must have handle, and 1.4 < widthlheight < 1.6 
You have a choice to present Marvin with one of the 5 images: 
has handle, no handle, no handle, has handle, has handle, 
open7 open, open open, open, 
flat bottom, flat bottom, flat bottom, flat bottom, flat bottom, 
width/height=.5 widthlheightz.4 widthlheightx2.0 widthlheightz1.5 widthlheighty3.0 
MISS MISS MISS HIT HIT 
Which image should you present to Marvin next? 
Give a short explanation of why you chose the image below: 
I. 
Problem 6: Powerful Ideas (15 points) 
Explain in four terse sentences or fewer how you would use self organizing maps to 
identify unusual events in a corpus of children's books. You are welcome to include 
diagrams in your explanation, but you can get fbll credit without any. 
Diagrams: 
Explain in four terse sentences or fewer how Yip and Sussman synthesized data in their 
phonological-rule learning program and how the synthesized examples are related to 
examples used by Winston's arch-learning program. You are welcome to include diagrams 
in your explanation, but you can get full credit without any. 
Dagrams: 
Explain in four terse sentences or fewer how you would be guided by Sinha's experiments 
if you were to try to write a face recognition program. You are welcome to include 
diagrams in your explanation, but you can get full credit without any. 
Tear-off sheet---you need not hand this in. Do not write any 
answers on this page. 
Tear-off sheet---you need not hand this in. Do not write any 
answers on this page. 
The require-lnk heuristlicis used when an evolving model hes a link 
in a place where a near miss does not. The model link is converted to 
a Must form, 
H The fortbM-link heuristic is used when a near miss has a link in a 
place where an evolving model does not. A Must-not form is installed 
in the evolving model. 
The climb-tree heuristic is used when an object in an evolving model 
corresponds to a different object in an example. Must-be-a links are 
routed tc the most specific common class in the classificationtree above 
the model object and the example object. 
The enlargeset heuristic is used when an object in anevolving model 
corresponds to adifferent object in an example and the two objects are 
not related to each other though aclassification tree, Mwt-he-a links 
are routed to a new class composed of the union of the objects' classes. 
The droplink herlrivtic is used when the objects that are different 
in an evolving model and in an example form an exhaustive set. The 
droplink heuristic is also used when an evolving model hss a link that 
is not in the exampie. The link is dropped tram the model. 
The close-interval heuriatic is used when a number or intern1 in 
an evolving madel corresponds to a number in an example. If the 
model uses a number, the number is replaced by an interval spanning 
the model's number and the example" number. If the model uses an 
interval, the interval is enlarged to reach the example's number. 
